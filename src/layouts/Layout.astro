---
import Nav from '../components/nav/nav.jsx'
import Footer from '../components/footer/footer.jsx'

import '../styles/main.css';

const { title, ogtitle, oggradient } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/icons/favicon.svg" />
    <link rel="manifest" href="/manifest.json" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="description"
      content="I'm a developer that makes awesome things for awesome people!"
    />
    <meta property="og:site_name" content="I'm Jhey Tompkins!" />
    <meta property="og:title" content="I'm Jhey Tompkins!" />
    <meta name="author" content="Jhey Tompkins" />
    <meta
      name="image"
      content={`https://jhey.netlify.app/og?title=${ogtitle}&gradient=${oggradient}`}
    />
    <meta
      name="image"
      property="og:image"
      content={`https://jhey.netlify.app/og?title=${ogtitle}&gradient=${oggradient}`}
    />
    <meta
      name="og:image"
      content={`https://jhey.netlify.app/og?title=${ogtitle}&gradient=${oggradient}`}
    />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://jhey.dev/" />
    <meta name="twitter:title" content="I'm Jhey Tompkins!" />
    <meta
      name="twitter:description"
      content="I'm a developer that makes awesome things for awesome people!"
    />
    <meta
      name="twitter:image"
      content={`https://jhey.netlify.app/og?title=${ogtitle}&gradient=${oggradient}`}
    />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:creator" content="@jh3yy" />
    <title>{title}</title>
  </head>
  <Nav/>
  <body>
    <slot />
    <Footer/>
  </body>
</html>
<script>
  const TOGGLE_FORM = document.querySelector('#theme-toggle')
  const TOGGLE_BUTTON = TOGGLE_FORM.querySelector('button')
  const TOGGLE_LABEL = TOGGLE_FORM.querySelector('#theme-toggle-label')
  const makeRequest = async () => {
    const res = await (await fetch(`/theme-toggle?${new URLSearchParams({
      client: true
    })}`)).json()
    document.documentElement.dataset.theme = res.theme
    const label = `Set theme to ${res.nextTheme}`
    TOGGLE_LABEL.innerHTML = label
    TOGGLE_BUTTON.title = label
  }
  const onSubmit = (e) => {
    e.preventDefault()
    makeRequest()
  }
  TOGGLE_FORM.addEventListener('submit', onSubmit)
</script>