---
import FeedLayout from "../../layouts/Feed.astro";
import { getGuestbook } from "../../constants/queries.js"
import { getPostsData } from "../../utils/getPageData.js";
import { ROUTES, GUESTBOOK_SUCCESS_PATH } from '../../constants/routes.js'


const posts = await getPostsData()

export async function getStaticPaths({ paginate }) {
  const { GUESTBOOK_PAGINATION_SIZE } = import.meta.env
  const guestbookPageSize = parseInt(GUESTBOOK_PAGINATION_SIZE, 10)
  const allEntries  = await getGuestbook()

  const paginated = paginate(allEntries, { pageSize: guestbookPageSize })
  
  // Mock success page takes the first dataset and swaps the guestbook cheep
  // for a success message
  const dummyPage = JSON.parse(JSON.stringify(paginated[0]))
  dummyPage.params.page = GUESTBOOK_SUCCESS_PATH
  dummyPage.props.page.data.map((entry, index) => {
    if (entry.pinned && entry.name === 'Jhey Tompkins') {
      entry.successMessage = true
      entry.body =
      '<p class="font-bold">Thanks for submitting your guestbook entry!</p>'
    }
    return entry
  })

  return [
    // Put a dummy success path in here for when the form is submitted...
    dummyPage,
    ...paginated
  ]
}

const page = {
  posts,
  guestbook: {
    ...Astro.props.page,
    thanks: Astro.params.page === GUESTBOOK_SUCCESS_PATH,
    data: Astro.props.page.data,
    totalPages: Astro.props.page.lastPage,
    route: ROUTES.guestbook.href,
  },
  route: ROUTES.guestbook.href,
}
---
<FeedLayout
  title="Guestbook"
  description="Jhey's guestbook. Come sign it!"
  ogtitle="Guestbook"
  oggradient="7"
  page={page}
/>