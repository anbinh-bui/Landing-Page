---
import Layout from "../../../layouts/Layout.astro";
import FeedLayout from '../../../components/feed-layout/feed-layout.jsx'
import { getAllAuthors, getAllCheeps, getAllTags, getSiteConfig } from '../../../constants/queries.js'
import { getRoutes } from '../../../constants/routes.js'
 
export async function getStaticPaths({ paginate }) {
  const { PAGINATION_SIZE } = import.meta.env
  const pageSize = parseInt(PAGINATION_SIZE, 10)
  
  const allAuthors = await getAllAuthors()
  const allTags = await getAllTags()
  const allCheeps = await getAllCheeps()
  const siteConfig = await getSiteConfig()

  return allTags.map((tag) => {
    const tagName = tag.title
    const filteredCheeps = allCheeps.filter(
      (cheep) => {
        const cheepTags = cheep.tags.filter(t => t !== null)
        let tags = [...cheepTags]
        if (cheep.article) {
          for (const article of cheep.article) {
            // Add related tags from an article
            if (article.tags) {
              for (const tag of article.tags) {
                if(!tags.find(t => t._id === tag._id)) tags.push(tag)
              }
            }
          }
        }
        if (tags.find(tag => tag.title === tagName)) return true
        return false
      }
    )

    // If there's a specialty character, show them
    let character = siteConfig.character
    const specialtyIndex = allAuthors.findIndex(author => author?.specialty?.title === tagName )
    if (specialtyIndex !== -1)
      character = allAuthors[specialtyIndex]

    return paginate(filteredCheeps, {
      params: { tag: tagName.toLowerCase() },
      props: {
        character,
        banner: siteConfig.banner,
        tagLabel: tag.title,
      },
      pageSize
    });
  });
}

// Return the first set of cheeps via paginate...
const { banner, character, page, tagLabel } = Astro.props
const params = Astro.params

---
<Layout
  title={`${tagLabel} posts from Jhey Tompkins`}
  ogtitle={`${tagLabel} posts from Jhey Tompkins`}
  description={`A collection of posts from Jhey all about ${tagLabel}`}
  oggradient="4"
>
  <FeedLayout
    character={character}
    banner={banner}
    posts={page.data}
    category={tagLabel}
    currentPage={page.currentPage}
    totalPages={page.lastPage}
    route={`/posts/${params.tag}`}
    navItems={getRoutes()}
  />
</Layout>